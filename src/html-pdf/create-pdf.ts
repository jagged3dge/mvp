import * as Handlebars from 'handlebars'
import * as pdf from 'html-pdf'
import { DocumentConfig, PhantomJsPdfOptions } from '../types'

// Handlebar helper support
export const registerHelper = (
  conditionName: string,
  callback: Handlebars.HelperDelegate
) => {
  Handlebars.registerHelper(conditionName, callback)
}

export const create = (
  document: DocumentConfig,
  options?: PhantomJsPdfOptions
) => {
  // Compile handlebar template
  return new Promise((resolve, reject) => {
    if (!document || !document.template || !document.context) {
      reject(new Error('Some, or all, options are missing.'))
    }

    if (document.type !== 'buffer' && !document.path) {
      reject(
        new Error(
          "Please provide path parameter to save file or if you want buffer as output give parameter type = 'buffer'"
        )
      )
    }

    const html = Handlebars.compile(document.template)(document.context)
    const pdfPromise = pdf.create(html, options)

    if (document.type === 'buffer') {
      // Create PDF from html template generated by handlebars
      //Output will be buffer
      pdfPromise.toBuffer((err, buff) => {
        if (!err) resolve(buff)
        else reject(err)
      })
    } else {
      // Create PDF from html template generated by handlebars
      // Output will be PDF file
      pdfPromise.toFile(document.path, (err, res) => {
        if (!err) resolve(res)
        else reject(err)
      })
    }
  })
}
